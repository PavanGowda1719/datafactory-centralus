{
	"name": "dataflow_booking_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CosmosDb_booking_fact",
						"type": "DatasetReference"
					},
					"name": "bookingdatacosmos"
				},
				{
					"dataset": {
						"referenceName": "booking_fact_synapse",
						"type": "DatasetReference"
					},
					"name": "sourcebookingdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "booking_fact_synapse",
						"type": "DatasetReference"
					},
					"name": "Target"
				}
			],
			"transformations": [
				{
					"name": "split"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "lookup"
				},
				{
					"name": "alterRow"
				},
				{
					"name": "select"
				}
			],
			"scriptLines": [
				"source(output(",
				"          check_out_date as date,",
				"          customer_id as short,",
				"          timestamp as timestamp,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          property_id as string,",
				"          amount as double,",
				"          booking_id as string,",
				"          currency as string,",
				"          property_location as (city as string, country as string),",
				"          booking_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     enableChangeFeed: true,",
				"     changeFeedStartFromTheBeginning: true,",
				"     format: 'document',",
				"     systemColumns: false) ~> bookingdatacosmos",
				"source(output(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourcebookingdata",
				"bookingdatacosmos split(check_out_date<check_in_date,",
				"     check_out_date>check_in_date,",
				"     disjoint: true) ~> split@(badrecordes, goodrecordes)",
				"split@goodrecordes derive(check_out_date = check_out_date,",
				"          customer_id = customer_id,",
				"          timestamp = timestamp,",
				"          owner_id = owner_id,",
				"          check_in_date = check_in_date,",
				"          property_id = property_id,",
				"          amount = amount,",
				"          booking_id = booking_id,",
				"          currency = currency,",
				"          booking_date = booking_date,",
				"          city = property_location.city,",
				"          country = property_location.country,",
				"          full_address = concat(property_location.city, ',' , property_location.country),",
				"          stay_duration = check_out_date - check_in_date,",
				"          booking_year = year(booking_date),",
				"          booking_month = month(booking_date)) ~> derivedColumn1",
				"derivedColumn1, sourcebookingdata lookup(derivedColumn1@booking_id == sourcebookingdata@booking_id,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     desc(sourcebookingdata@timestamp, false),",
				"     broadcast: 'auto')~> lookup",
				"lookup alterRow(insertIf(isNull(sourcebookingdata@booking_id)),",
				"     updateIf(not(isNull(sourcebookingdata@booking_id)))) ~> alterRow",
				"alterRow select(mapColumn(",
				"          check_out_date = derivedColumn1@check_out_date,",
				"          customer_id = derivedColumn1@customer_id,",
				"          timestamp = derivedColumn1@timestamp,",
				"          owner_id = derivedColumn1@owner_id,",
				"          check_in_date = derivedColumn1@check_in_date,",
				"          property_id = derivedColumn1@property_id,",
				"          amount = derivedColumn1@amount,",
				"          booking_id = derivedColumn1@booking_id,",
				"          currency = derivedColumn1@currency,",
				"          booking_date = derivedColumn1@booking_date,",
				"          city = derivedColumn1@city,",
				"          country = derivedColumn1@country,",
				"          full_address = derivedColumn1@full_address,",
				"          stay_duration = derivedColumn1@stay_duration,",
				"          booking_year = derivedColumn1@booking_year,",
				"          booking_month = derivedColumn1@booking_month",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['booking_id'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     outputRejectedData: true) ~> Target"
			]
		}
	}
}